name: Pipeline de Integração Contínua

on:
  push:
    branches:
      - main # Define que esta pipeline é acionada automaticamente ao realizar push na branch "main"

jobs:
  build:
    runs-on: ubuntu-latest # Define que o trabalho será executado em um ambiente Ubuntu

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v2 # Utiliza a ação oficial para realizar o checkout do código

      - name: Setup Node.js # Configuração do ambiente Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16" # configura a versão 16 do Node.js

      - name: Instalar Dependências
        run: npm install --legacy-peer-deps # Executa o comando npm para instalar as dependências do projeto, incluindo dependências legadas

      - name: Analisar Qualidade do Código
        run: |
          npm run lint
          if [ $? -ne 0 ]; then
            echo "Erro de linting encontrado. O push será bloqueado."
            exit 1
          fi

      - name: Build da Aplicação Vue.js
        run: |
          npm run build
          if [ $? -ne 0 ]; then
            echo "Erro de build encontrado. O push será bloqueado."
            exit 1
          fi

      - name: Verificar Erros de Build
        run: |
          if [ $? -ne 0 ]; then
            echo "Erro de build encontrado. A pipeline será interrompida."
            exit 1
          fi

      - name: Empacotar Artefatos # Empacotamento dos artefatos gerados
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist # Utiliza a ação oficial para empacotar e fazer upload dos artefatos gerados na pasta "dist"

      - name: Notificar sobre o Build
        if: ${{ always() }}
        run: echo "O build foi concluído com sucesso!"
